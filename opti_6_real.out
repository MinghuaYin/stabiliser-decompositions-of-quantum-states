Set parameter TokenServer to value "license1.computecanada.ca"
Set parameter TokenServer to value "license1.computecanada.ca"
Set parameter TokenServer to value "license1.computecanada.ca"
Set parameter TokenServer to value "license1.computecanada.ca"
Set parameter TokenServer to value "license1.computecanada.ca"
Set parameter TokenServer to value "license1.computecanada.ca"
/home/sushi172/Gurobi_Py310/lib/python3.10/site-packages/scipy/sparse/_index.py:137: ComplexWarning: Casting complex values to real discards the imaginary part
  x = np.asarray(x, dtype=self.dtype)
/home/sushi172/Gurobi_Py310/lib/python3.10/site-packages/cvxpy/problems/problem.py:1393: UserWarning: 
    The problem is either infeasible or unbounded, but the solver
    cannot tell which. Disable any solver-specific presolve methods
    and re-solve to determine the precise problem status.

    For GUROBI and CPLEX you can automatically perform this re-solve
    with the keyword argument prob.solve(reoptimize=True, ...).
    
  warnings.warn(INF_OR_UNB_MESSAGE)
/home/sushi172/Gurobi_Py310/lib/python3.10/site-packages/scipy/sparse/_index.py:137: ComplexWarning: Casting complex values to real discards the imaginary part
  x = np.asarray(x, dtype=self.dtype)
/home/sushi172/Gurobi_Py310/lib/python3.10/site-packages/cvxpy/problems/problem.py:1393: UserWarning: 
    The problem is either infeasible or unbounded, but the solver
    cannot tell which. Disable any solver-specific presolve methods
    and re-solve to determine the precise problem status.

    For GUROBI and CPLEX you can automatically perform this re-solve
    with the keyword argument prob.solve(reoptimize=True, ...).
    
  warnings.warn(INF_OR_UNB_MESSAGE)
/home/sushi172/Gurobi_Py310/lib/python3.10/site-packages/scipy/sparse/_index.py:137: ComplexWarning: Casting complex values to real discards the imaginary part
  x = np.asarray(x, dtype=self.dtype)
/home/sushi172/Gurobi_Py310/lib/python3.10/site-packages/cvxpy/problems/problem.py:1393: UserWarning: 
    The problem is either infeasible or unbounded, but the solver
    cannot tell which. Disable any solver-specific presolve methods
    and re-solve to determine the precise problem status.

    For GUROBI and CPLEX you can automatically perform this re-solve
    with the keyword argument prob.solve(reoptimize=True, ...).
    
  warnings.warn(INF_OR_UNB_MESSAGE)
/home/sushi172/Gurobi_Py310/lib/python3.10/site-packages/scipy/sparse/_index.py:137: ComplexWarning: Casting complex values to real discards the imaginary part
  x = np.asarray(x, dtype=self.dtype)
/home/sushi172/Gurobi_Py310/lib/python3.10/site-packages/cvxpy/problems/problem.py:1393: UserWarning: 
    The problem is either infeasible or unbounded, but the solver
    cannot tell which. Disable any solver-specific presolve methods
    and re-solve to determine the precise problem status.

    For GUROBI and CPLEX you can automatically perform this re-solve
    with the keyword argument prob.solve(reoptimize=True, ...).
    
  warnings.warn(INF_OR_UNB_MESSAGE)
/home/sushi172/Gurobi_Py310/lib/python3.10/site-packages/scipy/sparse/_index.py:137: ComplexWarning: Casting complex values to real discards the imaginary part
  x = np.asarray(x, dtype=self.dtype)
/home/sushi172/Gurobi_Py310/lib/python3.10/site-packages/cvxpy/problems/problem.py:1393: UserWarning: 
    The problem is either infeasible or unbounded, but the solver
    cannot tell which. Disable any solver-specific presolve methods
    and re-solve to determine the precise problem status.

    For GUROBI and CPLEX you can automatically perform this re-solve
    with the keyword argument prob.solve(reoptimize=True, ...).
    
  warnings.warn(INF_OR_UNB_MESSAGE)
/home/sushi172/Gurobi_Py310/lib/python3.10/site-packages/scipy/sparse/_index.py:137: ComplexWarning: Casting complex values to real discards the imaginary part
  x = np.asarray(x, dtype=self.dtype)
/home/sushi172/Gurobi_Py310/lib/python3.10/site-packages/cvxpy/problems/problem.py:1393: UserWarning: 
    The problem is either infeasible or unbounded, but the solver
    cannot tell which. Disable any solver-specific presolve methods
    and re-solve to determine the precise problem status.

    For GUROBI and CPLEX you can automatically perform this re-solve
    with the keyword argument prob.solve(reoptimize=True, ...).
    
  warnings.warn(INF_OR_UNB_MESSAGE)
State		(||old_soln||_1)^2		Stabilizer extent squared		Time elapsed
-----------------------------------------------------------------------------------------------------
CC^5Z   		 1.56250000		---       				1026.6001617908478
D_6^1   		 2.66666667		---       				1007.0361032870132
D_6^2   		 2.40000000		---       				1034.3046651179902
D_6^3   		 1.60000000		---       				1020.9786125640385
D_6^4   		 2.40000000		---       				1032.714206627803
D_6^5   		 2.66666667		---       				1064.4360590400174

Time elapsed: 1065.1258900999092
